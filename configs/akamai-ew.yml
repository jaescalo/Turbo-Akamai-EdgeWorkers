# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
# This file is updated by the script update-ew-config-files.sh before CircleCI executes it. It only populates the variables USE_EDGEKV, ACTIVATE_PRODUCTION, EWVERSION
version: 2.1

parameters:
  edgekv:
    type: boolean
    default: USE_EDGEKV
  production:
    type: boolean
    default: ACTIVATE_PRODUCTION

executors:
  akamai-ew-cli-docker:
    docker:
      - image: akamai/edgeworkers
    working_directory: /root/edgeworkers
    environment:
      EW_NEW_VERSION: EWVERSION
      EWID: 4885
      BUNDLENAME: ew-bundle.tgz
      DESCRIPTION: "EW Deployment Automation with CircleCI - Support for EdgeKV"

jobs:
  build:
    executor: akamai-ew-cli-docker
    steps:
      - checkout
      - run: 
          name: "Build .edgerc file"
          command: echo -e "[default]\nclient_secret = $CLIENT_SECRET\nhost = $HOST\naccess_token = $ACCESS_TOKEN\nclient_token = $CLIENT_TOKEN" > .edgerc
      - when: 
          condition: << pipeline.parameters.edgekv >>
          steps: 
            - run: 
                name: "Add token to edgekv_tokens.js file"
                command: |
                  sed -i 's|EDGEKV_NAMESPACE|'$EDGEKV_NAMESPACE'|g' edgekv_tokens.js
                  sed -i 's|EDGEKV_TOKEN_NAME|'$EDGEKV_TOKEN_NAME'|g' edgekv_tokens.js
                  sed -i 's|EDGEKV_TOKEN_VALUE|'$EDGEKV_TOKEN_VALUE'|g' edgekv_tokens.js   
      - run:
          name: "Create and Upload Artifact"
          command: |
            sed -i 's|EW_NEW_VERSION|'$EW_NEW_VERSION'|g' bundle.json
            tar -czvf ./$BUNDLENAME $( find -name "*.js" -or -name "*.json" | cut -c 3-)
            akamai ew upload --bundle ./$BUNDLENAME $EWID --edgerc /root/edgeworkers/.edgerc --accountkey $ACCOUNTKEY
      - persist_to_workspace:
          root: ~/
          paths: edgeworkers
      - store_artifacts:
          path: ew-bundle.tgz
  deploy:
    executor: akamai-ew-cli-docker
    steps:  
      - attach_workspace:
          at: /root      
      - run: 
          name: "Activate EdgeWorkers to Staging"
          command: |
            akamai ew activate $EWID STAGING $EW_NEW_VERSION --edgerc /root/edgeworkers/.edgerc --accountkey $ACCOUNTKEY
            akamai ew status $EWID --versionId $EW_NEW_VERSION --edgerc /root/edgeworkers/.edgerc --accountkey $ACCOUNTKEY    
      - when: 
          condition: << pipeline.parameters.production >>
          steps: 
            - run: 
                name: "Activate EdgeWorkers to Production"
                command: akamai ew activate $EWID PRODUCTION $EW_NEW_VERSION --edgerc /root/edgeworkers/.edgerc --accountkey $ACCOUNTKEY
      - run:
          name: "Activation in Progress"
          command: while :; do OUTPUT=`akamai ew status $EWID --versionId $EW_NEW_VERSION --edgerc /root/edgeworkers/.edgerc --accountkey $ACCOUNTKEY | awk '/PRESUBMIT|PENDING|IN_PROGRESS/ { print $4 }'`; if [ -z $OUTPUT ]; then echo Activation COMPLETE; break; else sleep 5; fi; done
  test:
    executor: akamai-ew-cli-docker  
    steps:  
      - attach_workspace:
          at: /root      
      - run:
          name: "Enable Enhanced Debugging Token"
          command: |
            # This only enables the debugging header as a first step for testing, but more testing logic can be added
            akamai ew --edgerc /root/edgeworkers/.edgerc --accountkey $ACCOUNTKEY auth --expiry 60 --acl / --network staging $HOSTNAME || true 

workflows:
  ew_pipeline:
    jobs:
      - build:
          context:
            - edgerc
      - deploy:
          requires:
            - build
          context:
            - edgerc
      - test:
          requires:
            - deploy
          context:
            - edgerc
          post-steps:
            - run: 
                name: "Remove .edgerc"
                command: rm -r .edgerc